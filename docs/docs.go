// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/group/create": {
            "post": {
                "tags": [
                    "Group"
                ],
                "summary": "GroupInfo",
                "parameters": [
                    {
                        "description": "GroupCreateReq",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.GroupCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GroupCreateResp"
                        }
                    }
                }
            }
        },
        "/group/list": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "GroupInfo",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "name": "pageNum",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.GroupResp"
                            }
                        }
                    }
                }
            }
        },
        "/group/search": {
            "post": {
                "tags": [
                    "Group"
                ],
                "summary": "GroupInfo",
                "parameters": [
                    {
                        "description": "GroupSearchReq",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.GroupSearchReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/group/usersAdd": {
            "post": {
                "tags": [
                    "user2group"
                ],
                "summary": "UsersAddToGroup",
                "parameters": [
                    {
                        "description": "UsersInGroupReq",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UsersInGroupReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ModifyRowsResp"
                        }
                    }
                }
            }
        },
        "/group/usersDelete": {
            "post": {
                "tags": [
                    "user2group"
                ],
                "summary": "UsersDeleteFromGroup",
                "parameters": [
                    {
                        "description": "UsersInGroupReq",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UsersInGroupReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ModifyRowsResp"
                        }
                    }
                }
            }
        },
        "/group/usersList": {
            "get": {
                "tags": [
                    "user2group"
                ],
                "summary": "UsersListByGroup",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "groupId",
                        "name": "groupId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.UsersResp"
                        }
                    }
                }
            }
        },
        "/group/{groupId}": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "GroupInfo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "groupId",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GroupResp"
                        }
                    }
                }
            }
        },
        "/group/{groupId}/delete": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "GroupInfo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "groupId",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ModifyRowsResp"
                        }
                    }
                }
            }
        },
        "/group/{groupId}/update": {
            "post": {
                "tags": [
                    "Group"
                ],
                "summary": "GroupInfo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "groupId",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "GroupUpdateReq",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.GroupUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ModifyRowsResp"
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "UserCreate Param",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UserCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.UserCreateResp"
                        }
                    }
                }
            }
        },
        "/user/groupsAdd": {
            "post": {
                "tags": [
                    "user2group"
                ],
                "summary": "GroupsAddToUser",
                "parameters": [
                    {
                        "description": "GroupsInUserReq",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.GroupsInUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ModifyRowsResp"
                        }
                    }
                }
            }
        },
        "/user/groupsDelete": {
            "post": {
                "tags": [
                    "user2group"
                ],
                "summary": "GroupsDeleteFromUser",
                "parameters": [
                    {
                        "description": "GroupsInUserReq",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.GroupsInUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ModifyRowsResp"
                        }
                    }
                }
            }
        },
        "/user/groupsList": {
            "get": {
                "tags": [
                    "user2group"
                ],
                "summary": "GroupsListByUser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GroupsResp"
                        }
                    }
                }
            }
        },
        "/user/list": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "user list",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "age",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "name": "pageNum",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "realname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.UserResp"
                            }
                        }
                    }
                }
            }
        },
        "/user/search": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "user search",
                "parameters": [
                    {
                        "description": "UserSearch Param",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UserSearchReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.UserResp"
                        }
                    }
                }
            }
        },
        "/user/{userId}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Fetch UserInfo profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.UserResp"
                        }
                    }
                }
            }
        },
        "/user/{userId}/delete": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "user delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ModifyRowsResp"
                        }
                    }
                }
            }
        },
        "/user/{userId}/update": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "userInfo update",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UserUpdate Param",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UserUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ModifyRowsResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "condition.QueryCondition": {
            "type": "object",
            "required": [
                "comparison",
                "fieldname",
                "operator",
                "value"
            ],
            "properties": {
                "comparison": {
                    "type": "string",
                    "enum": [
                        "eq",
                        "ne",
                        "gt",
                        "ge",
                        "lt",
                        "le",
                        "in",
                        "like"
                    ]
                },
                "fieldname": {
                    "type": "string"
                },
                "operator": {
                    "type": "string",
                    "enum": [
                        "and",
                        "or"
                    ]
                },
                "value": {}
            }
        },
        "types.GroupCreateReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "types.GroupCreateResp": {
            "type": "object",
            "properties": {
                "lastId": {
                    "type": "integer"
                }
            }
        },
        "types.GroupResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.GroupSearchReq": {
            "type": "object",
            "properties": {
                "query": {
                    "description": "pagination.Page",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/condition.QueryCondition"
                    }
                }
            }
        },
        "types.GroupUpdateReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.GroupsInUserReq": {
            "type": "object",
            "required": [
                "groupIds",
                "userId"
            ],
            "properties": {
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "types.GroupsResp": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "types.ModifyRowsResp": {
            "type": "object",
            "properties": {
                "rowsAffected": {
                    "type": "integer"
                }
            }
        },
        "types.UserCreateReq": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "realname": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.UserCreateResp": {
            "type": "object",
            "properties": {
                "lastId": {
                    "type": "integer"
                }
            }
        },
        "types.UserResp": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "realname": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.UserSearchReq": {
            "type": "object",
            "properties": {
                "query": {
                    "description": "pagination.Page",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/condition.QueryCondition"
                    }
                }
            }
        },
        "types.UserUpdateReq": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "realname": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.UsersInGroupReq": {
            "type": "object",
            "required": [
                "groupId",
                "userIds"
            ],
            "properties": {
                "groupId": {
                    "type": "integer"
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "types.UsersResp": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Swagger API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
